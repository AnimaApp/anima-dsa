name: publish docs

on:
  push:
    branches:
      - 'docs/**'
    paths:
      - 'packages/docs/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: |
          cd packages/docs
          npm i
          npm run docs:build

      - name: Deploy to Netlify
        id: netlify-deploy
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy -d packages/docs/.vitepress/dist/

      # - name: Get PR number
      #   id: pr
      #   run: |
      #     echo "{number}=$(jq --raw-output .pull_request.number $GITHUB_EVENT_PATH)" >> $GITHUB_OUTPUT

      - name: Extract Netlify URL
        id: extract-url
        run: |
          echo "{url}=$(grep -o 'Website Draft URL: .*' ${{ steps.netlify-deploy.outputs.stdout }} | cut -d' ' -f3-)" >> $GITHUB_OUTPUT

      - uses: actions/github-script@v6
        id: get_issue_number
        with:
          script: |
            if (context.issue.number) {
              // Return issue number if present
              return context.issue.number;
            } else {
              // Otherwise return issue number from commit
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0].number;
            }
          result-encoding: string

      - name: Results
        run: |
          echo 'PR number:${{steps.get_issue_number.outputs.result}}'
          echo 'URL:${{ steps.extract-url.outputs.url }}'

      # - name: Comment on PR
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       github.rest.pulls.createReview({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: ${{steps.get_issue_number.outputs.result}},
      #         body: `Deploy preview: ${{ steps.extract-url.outputs.url }}`
      #       })
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Deploy preview: ${{ steps.extract-url.outputs.url }}
          pr_number: ${{steps.get_issue_number.outputs.result}}
