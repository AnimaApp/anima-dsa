import type { WriteRequest, IRepo } from '@animaapp/store-provider';
import type { DesignToken, DesignTokenMap } from './types';
interface DesignTokenManagerInitConfig {
    initialTokens?: DesignTokenMap;
    store?: IRepo;
    remoteFilePath?: string;
}
interface SaveRequestParams {
    title: string;
    description?: string;
    branchName: string;
}
export declare class DesignTokenManager {
    #private;
    onTokensChange: (tokens: DesignTokenMap) => void;
    constructor(args?: DesignTokenManagerInitConfig);
    getToken(pathToKey: string): DesignToken | undefined;
    setToken(pathToKey: string, token: DesignToken): void;
    setTokens(tokens: DesignTokenMap): void;
    removeToken(pathToKey: string): void;
    set tokens(tokens: DesignTokenMap);
    get tokens(): DesignTokenMap;
    setStore({ store, filePath }: {
        store: IRepo;
        filePath: string;
    }): void;
    getTokensFromStore(args?: {
        branch?: string;
    }): Promise<DesignTokenMap>;
    updateStoreRequest({ title, description, branchName, }: SaveRequestParams): Promise<void>;
    getDesignTokensLastUpdateTime(): Promise<number>;
    getUpdateRequests(): Promise<WriteRequest[]>;
}
export {};
//# sourceMappingURL=designTokenManager.d.ts.map