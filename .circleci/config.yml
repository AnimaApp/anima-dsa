version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1
workflows:
  storybook-cli:
    jobs:
      - build-and-lint:
          context: 
            - anima-prod
            - AWS
      - tests:
          context: 
            - anima-prod
            - AWS
          requires:
            - build-and-lint

  storybook-cli-nightly-test:
    triggers:
      - schedule:
          cron: "0 3 * * *"
          filters:
            branches:
              only: master 
    jobs:
      - build-and-lint:
          context: 
            - anima-prod
            - AWS
      - tests:
          context:
            - anima-prod
            - AWS
          requires:
            - build-and-lint
jobs:
  build-and-lint:
    docker:
      - image: node:16
    working_directory: /mnt/project
    steps:
      - checkout
      - run: |
          echo "registry=https://registry.npmjs.org/" >> ./.npmrc
          echo "@animaapp:registry=https://npm.pkg.github.com" >> ./.npmrc
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_PACKAGE_TOKEN}" >> ./.npmrc
          echo "always-auth=true" >> ./.npmrc
      - run:
          name: "Install Ubuntu dependencies"
          command: |
            apt-get -y update
            apt-get install -y jq
      - run:
          name: 'Install pnpm'
          command: 'npm i -g pnpm@latest'
      - restore_cache:
          key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: "Install dependencies"
          command: "pnpm i"
      - save_cache:
          key: v1-deps-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules
      - run:
          name: "Build"
          command: "pnpm build"
      - persist_to_workspace:
          root: /mnt
          paths:
            - project
  tests:
    docker:
      - image: node:16
    working_directory: /mnt/project
    steps:
      - attach_workspace:
          at: /mnt
      - aws-cli/setup:
          profile-name: default
      - run:
          name: 'Install pnpm'
          command: 'npm i -g pnpm@latest'
      - run:
          name: "Run all tests"
          command: "pnpm test"
      
